name: Release new version to PyPI
description: 'Release new version to PyPI using setuptools, build and publish'
inputs:
  version:
    required: true
    description: 'Version to release'
  pypi_pass:
    required: true
    description: 'Password for the private PyPI repository'

  github_token:
    required: false
    description: 'GitHub token'
    default: 'dummy'
  pypi_name:
    required: false
    description: 'Name of the private PyPI repository'
    default: 'pypi'
  pypi_host:
    required: false
    description: 'Host of the private PyPI repository'
    default: 'https://upload.pypi.org/legacy/'
  pypi_user:
    required: false
    description: 'Username for the private PyPI repository'
    default: '__token__'

runs:
  using: 'composite'
  steps:
  - id: check-version-format
    run: |
      if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+(\.[a-zA-Z0-9]+)*)?$ ]]; then
        echo "Invalid version format. Expected MAJOR.MINOR.PATCH(-SUFFIX)?, got ${{ inputs.version }}"
        exit 1
      fi
    shell: bash

  - id: install-tools
    shell: bash
    # it is necessary to upgrade setuptools over the system version to avoid issues with build
    run: |
      python3 -m pip install --upgrade pip wheel setuptools
      python3 -m pip install build twine

  - id: setup-pypirc
    shell: bash
    run: |
      echo "[distutils]
      index-servers=
          ${{ inputs.pypi_name }}

      [${{ inputs.pypi_name }}]
      repository: https://${{ inputs.pypi_host }}
      username: ${{ inputs.pypi_user }}
      password: ${{ inputs.pypi_pass }}
      " > ~/.pypirc

  - id: build-and-upload
    shell: bash
    run: |
      sed -i "s/version = .*/version = \"${{ inputs.version }}\"/g" pyproject.toml
      python3 -m build --no-isolation
      python3 -m twine upload --repository ${{inputs.pypi_name}} --skip-existing --disable-progress-bar dist/*

